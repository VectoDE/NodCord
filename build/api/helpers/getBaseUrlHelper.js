var h=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports);var _=h((P,b)=>{b.exports={name:"dotenv",version:"16.4.5",description:"Loads environment variables from .env file",main:"lib/main.js",types:"lib/main.d.ts",exports:{".":{types:"./lib/main.d.ts",require:"./lib/main.js",default:"./lib/main.js"},"./config":"./config.js","./config.js":"./config.js","./lib/env-options":"./lib/env-options.js","./lib/env-options.js":"./lib/env-options.js","./lib/cli-options":"./lib/cli-options.js","./lib/cli-options.js":"./lib/cli-options.js","./package.json":"./package.json"},scripts:{"dts-check":"tsc --project tests/types/tsconfig.json",lint:"standard","lint-readme":"standard-markdown",pretest:"npm run lint && npm run dts-check",test:"tap tests/*.js --100 -Rspec","test:coverage":"tap --coverage-report=lcov",prerelease:"npm test",release:"standard-version"},repository:{type:"git",url:"git://github.com/motdotla/dotenv.git"},funding:"https://dotenvx.com",keywords:["dotenv","env",".env","environment","variables","config","settings"],readmeFilename:"README.md",license:"BSD-2-Clause",devDependencies:{"@definitelytyped/dtslint":"^0.0.133","@types/node":"^18.11.3",decache:"^4.6.1",sinon:"^14.0.1",standard:"^17.0.0","standard-markdown":"^7.1.0","standard-version":"^9.5.0",tap:"^16.3.0",tar:"^6.1.11",typescript:"^4.8.4"},engines:{node:">=12"},browser:{fs:!1}}});var N=h((B,u)=>{var v=require("fs"),g=require("path"),V=require("os"),T=require("crypto"),I=_(),E=I.version,O=/(?:^|^)\s*(?:export\s+)?([\w.-]+)(?:\s*=\s*?|:\s+?)(\s*'(?:\\'|[^'])*'|\s*"(?:\\"|[^"])*"|\s*`(?:\\`|[^`])*`|[^#\r\n]+)?\s*(?:#.*)?(?:$|$)/mg;function w(e){let t={},n=e.toString();n=n.replace(/\r\n?/mg,`
`);let s;for(;(s=O.exec(n))!=null;){let i=s[1],r=s[2]||"";r=r.trim();let o=r[0];r=r.replace(/^(['"`])([\s\S]*)\1$/mg,"$2"),o==='"'&&(r=r.replace(/\\n/g,`
`),r=r.replace(/\\r/g,"\r")),t[i]=r}return t}function A(e){let t=D(e),n=c.configDotenv({path:t});if(!n.parsed){let o=new Error(`MISSING_DATA: Cannot parse ${t} for an unknown reason`);throw o.code="MISSING_DATA",o}let s=m(e).split(","),i=s.length,r;for(let o=0;o<i;o++)try{let a=s[o].trim(),l=j(n,a);r=c.decrypt(l.ciphertext,l.key);break}catch(a){if(o+1>=i)throw a}return c.parse(r)}function $(e){console.log(`[dotenv@${E}][INFO] ${e}`)}function k(e){console.log(`[dotenv@${E}][WARN] ${e}`)}function f(e){console.log(`[dotenv@${E}][DEBUG] ${e}`)}function m(e){return e&&e.DOTENV_KEY&&e.DOTENV_KEY.length>0?e.DOTENV_KEY:process.env.DOTENV_KEY&&process.env.DOTENV_KEY.length>0?process.env.DOTENV_KEY:""}function j(e,t){let n;try{n=new URL(t)}catch(a){if(a.code==="ERR_INVALID_URL"){let l=new Error("INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development");throw l.code="INVALID_DOTENV_KEY",l}throw a}let s=n.password;if(!s){let a=new Error("INVALID_DOTENV_KEY: Missing key part");throw a.code="INVALID_DOTENV_KEY",a}let i=n.searchParams.get("environment");if(!i){let a=new Error("INVALID_DOTENV_KEY: Missing environment part");throw a.code="INVALID_DOTENV_KEY",a}let r=`DOTENV_VAULT_${i.toUpperCase()}`,o=e.parsed[r];if(!o){let a=new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${r} in your .env.vault file.`);throw a.code="NOT_FOUND_DOTENV_ENVIRONMENT",a}return{ciphertext:o,key:s}}function D(e){let t=null;if(e&&e.path&&e.path.length>0)if(Array.isArray(e.path))for(let n of e.path)v.existsSync(n)&&(t=n.endsWith(".vault")?n:`${n}.vault`);else t=e.path.endsWith(".vault")?e.path:`${e.path}.vault`;else t=g.resolve(process.cwd(),".env.vault");return v.existsSync(t)?t:null}function y(e){return e[0]==="~"?g.join(V.homedir(),e.slice(1)):e}function L(e){$("Loading env from encrypted .env.vault");let t=c._parseVault(e),n=process.env;return e&&e.processEnv!=null&&(n=e.processEnv),c.populate(n,t,e),{parsed:t}}function x(e){let t=g.resolve(process.cwd(),".env"),n="utf8",s=!!(e&&e.debug);e&&e.encoding?n=e.encoding:s&&f("No encoding is specified. UTF-8 is used by default");let i=[t];if(e&&e.path)if(!Array.isArray(e.path))i=[y(e.path)];else{i=[];for(let l of e.path)i.push(y(l))}let r,o={};for(let l of i)try{let d=c.parse(v.readFileSync(l,{encoding:n}));c.populate(o,d,e)}catch(d){s&&f(`Failed to load ${l} ${d.message}`),r=d}let a=process.env;return e&&e.processEnv!=null&&(a=e.processEnv),c.populate(a,o,e),r?{parsed:o,error:r}:{parsed:o}}function K(e){if(m(e).length===0)return c.configDotenv(e);let t=D(e);return t?c._configVault(e):(k(`You set DOTENV_KEY but you are missing a .env.vault file at ${t}. Did you forget to build it?`),c.configDotenv(e))}function R(e,t){let n=Buffer.from(t.slice(-64),"hex"),s=Buffer.from(e,"base64"),i=s.subarray(0,12),r=s.subarray(-16);s=s.subarray(12,-16);try{let o=T.createDecipheriv("aes-256-gcm",n,i);return o.setAuthTag(r),`${o.update(s)}${o.final()}`}catch(o){let a=o instanceof RangeError,l=o.message==="Invalid key length",d=o.message==="Unsupported state or unable to authenticate data";if(a||l){let p=new Error("INVALID_DOTENV_KEY: It must be 64 characters long (or more)");throw p.code="INVALID_DOTENV_KEY",p}else if(d){let p=new Error("DECRYPTION_FAILED: Please check your DOTENV_KEY");throw p.code="DECRYPTION_FAILED",p}else throw o}}function Y(e,t,n={}){let s=!!(n&&n.debug),i=!!(n&&n.override);if(typeof t!="object"){let r=new Error("OBJECT_REQUIRED: Please check the processEnv argument being passed to populate");throw r.code="OBJECT_REQUIRED",r}for(let r of Object.keys(t))Object.prototype.hasOwnProperty.call(e,r)?(i===!0&&(e[r]=t[r]),s&&f(i===!0?`"${r}" is already defined and WAS overwritten`:`"${r}" is already defined and was NOT overwritten`)):e[r]=t[r]}var c={configDotenv:x,_configVault:L,_parseVault:A,config:K,decrypt:R,parse:w,populate:Y};u.exports.configDotenv=c.configDotenv;u.exports._configVault=c._configVault;u.exports._parseVault=c._parseVault;u.exports.config=c.config;u.exports.decrypt=c.decrypt;u.exports.parse=c.parse;u.exports.populate=c.populate;u.exports=c});N().config();var U=()=>{let e=`${process.env.CLIENT_HTTPS}://${process.env.CLIENT_BASE_URL}`;return process.env.NODE_ENV==="production"?e:`${e}:${process.env.CLIENT_PORT}`};module.exports=U;
//# sourceMappingURL=getBaseUrlHelper.js.map
